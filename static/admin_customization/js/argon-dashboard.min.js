"use strict";

// Initialize Perfect Scrollbar for specific elements
function initializePerfectScrollbar() {
    if (navigator.platform.indexOf("Win") !== -1) {
        const elementsToInitialize = [
            ".main-content",
            ".sidenav",
            ".navbar-collapse",
            ".fixed-plugin"
        ];
        
        elementsToInitialize.forEach(selector => {
            const element = document.querySelector(selector);
            if (element) {
                new PerfectScrollbar(element);
            } else {
                console.warn(`Element ${selector} not found.`);
            }
        });
    }
}

// Set up navbar blur effect on scroll
function setupNavbarBlur() {
    const navbarBlurElement = document.getElementById("navbarBlur");
    if (navbarBlurElement) {
        navbarBlurOnScroll("navbarBlur");
    }
}

// Handle input focus and defocus
function handleInputFocus() {
    const allInputs = document.querySelectorAll("input.form-control");
    allInputs.forEach(input => {
        input.setAttribute("onfocus", "focused(this)");
        input.setAttribute("onfocusout", "defocused(this)");
    });
}

// Toggle the sidebar color
function sidebarColor(element) {
    const color = element.getAttribute("data-color");
    const siblingElements = element.parentElement.children;

    Array.from(siblingElements).forEach(sibling => {
        sibling.classList.remove("active");
    });

    if (element.classList.contains("active")) {
        element.classList.remove("active");
    } else {
        element.classList.add("active");
    }

    document.querySelector(".sidenav").setAttribute("data-color", color);
    const sidenavCardBtn = document.querySelector("#sidenavCard + .btn + .btn");
    if (sidenavCardBtn) {
        sidenavCardBtn.classList.remove("btn", "btn-sm", "w-100", "mb-0", `bg-gradient-${color}`);
        sidenavCardBtn.classList.add("btn", "btn-sm", "w-100", "mb-0", `bg-gradient-${color}`);
    }
}

// Toggle the sidebar type
function sidebarType(element) {
    const sidebar = document.querySelector(".sidenav");
    const newClass = element.getAttribute("data-class");
    const allClasses = Array.from(element.parentElement.children).map(sibling => sibling.getAttribute("data-class"));

    sidebar.classList.remove(...allClasses);
    sidebar.classList.add(newClass);

    if (newClass === "bg-white") {
        document.querySelectorAll(".sidenav .text-white").forEach(el => {
            el.classList.remove("text-white");
            el.classList.add("text-dark");
        });
    } else {
        document.querySelectorAll(".sidenav .text-dark").forEach(el => {
            el.classList.remove("text-dark");
            el.classList.add("text-white");
        });
    }

    updateNavbarLogo(newClass);
}

// Update navbar logo based on sidebar type
function updateNavbarLogo(newClass) {
    const navbarBrandImg = document.querySelector(".navbar-brand-img");
    if (navbarBrandImg) {
        const currentSrc = navbarBrandImg.src;
        if (newClass === "bg-white" && currentSrc.includes("logo-ct.png")) {
            navbarBrandImg.src = currentSrc.replace("logo-ct", "logo-ct-dark");
        } else if (newClass !== "bg-white" && currentSrc.includes("logo-ct-dark.png")) {
            navbarBrandImg.src = currentSrc.replace("logo-ct-dark", "logo-ct");
        }
    }
}

// Toggle the navbar fixed position
function navbarFixed(element) {
    const navbarBlurElement = document.getElementById("navbarBlur");
    const classesToAdd = ["position-sticky", "bg-white", "left-auto", "top-2", "z-index-sticky"];
    const classesToRemove = ["shadow-none"];

    if (element.getAttribute("checked")) {
        toggleNavLinksColor("transparent");
        navbarBlurElement.classList.remove(...classesToAdd);
        navbarBlurElement.setAttribute("data-scroll", "false");
        navbarBlurOnScroll("navbarBlur");
        element.removeAttribute("checked");
    } else {
        toggleNavLinksColor("blur");
        navbarBlurElement.classList.add(...classesToAdd);
        navbarBlurElement.setAttribute("data-scroll", "true");
        navbarBlurOnScroll("navbarBlur");
        element.setAttribute("checked", "true");
    }
}

// Toggle the navbar minimize state
function navbarMinimize(element) {
    const sidenav = document.querySelector(".g-sidenav-show");
    if (element.getAttribute("checked")) {
        sidenav.classList.remove("g-sidenav-hidden");
        sidenav.classList.add("g-sidenav-pinned");
        element.removeAttribute("checked");
    } else {
        sidenav.classList.remove("g-sidenav-pinned");
        sidenav.classList.add("g-sidenav-hidden");
        element.setAttribute("checked", "true");
    }
}

// Toggle the color of navbar links
function toggleNavLinksColor(colorType) {
    const links = document.querySelectorAll(".navbar-main .nav-link, .navbar-main .breadcrumb-item, .navbar-main .breadcrumb-item a, .navbar-main h6");
    const togglerLines = document.querySelectorAll(".navbar-main .sidenav-toggler-line");

    if (colorType === "blur") {
        links.forEach(link => link.classList.remove("text-white"));
        togglerLines.forEach(line => {
            line.classList.add("bg-dark");
            line.classList.remove("bg-white");
        });
    } else if (colorType === "transparent") {
        links.forEach(link => link.classList.add("text-white"));
        togglerLines.forEach(line => {
            line.classList.remove("bg-dark");
            line.classList.add("bg-white");
        });
    }
}

// Handle navbar blur on scroll
function navbarBlurOnScroll(elementId) {
    const navbarBlurElement = document.getElementById(elementId);
    if (navbarBlurElement) {
        const isScrollEnabled = navbarBlurElement.getAttribute("data-scroll") === "true";
        const classesToAdd = ["bg-white", "left-auto", "position-sticky"];
        const classesToRemove = ["shadow-none"];

        function handleScroll() {
            if (window.scrollY > 5) {
                navbarBlurElement.classList.add(...classesToAdd);
                navbarBlurElement.classList.remove(...classesToRemove);
                toggleNavLinksColor("blur");
            } else {
                navbarBlurElement.classList.remove(...classesToAdd);
                navbarBlurElement.classList.add(...classesToRemove);
                toggleNavLinksColor("transparent");
            }
        }

        window.onscroll = debounce(isScrollEnabled ? handleScroll : () => handleScroll(), 10);
    }
}

// Debounce function to limit function execution
function debounce(func, wait) {
    let timeout;
    return function(...args) {
        clearTimeout(timeout);
        timeout = setTimeout(() => func.apply(this, args), wait);
    };
}

// Initialize tooltip elements
function initializeTooltips() {
    const tooltipTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.forEach(trigger => new bootstrap.Tooltip(trigger));
}

// Setup Fixed Plugin interactions
function setupFixedPlugin() {
    const fixedPlugin = document.querySelector(".fixed-plugin");
    if (fixedPlugin) {
        const fixedPluginButton = document.querySelector(".fixed-plugin-button");
        const fixedPluginButtonNav = document.querySelector(".fixed-plugin-button-nav");
        const fixedPluginCard = document.querySelector(".fixed-plugin .card");
        const fixedPluginCloseButtons = document.querySelectorAll(".fixed-plugin-close-button");
        const navbarBlur = document.getElementById("navbarBlur");
        const buttonNavbarFixed = document.getElementById("navbarFixed");

        if (fixedPluginButton) {
            fixedPluginButton.onclick = () => fixedPlugin.classList.toggle("show");
        }

        if (fixedPluginButtonNav) {
            fixedPluginButtonNav.onclick = () => fixedPlugin.classList.toggle("show");
        }

        fixedPluginCloseButtons.forEach(button => {
            button.onclick = () => fixedPlugin.classList.remove("show");
        });

        document.body.onclick = (e) => {
            if (![fixedPluginButton, fixedPluginButtonNav].includes(e.target) && !fixedPluginCard.contains(e.target)) {
                fixedPlugin.classList.remove("show");
            }
        };

        if (navbarBlur && buttonNavbarFixed && navbarBlur.getAttribute("data-scroll") === "true") {
            buttonNavbarFixed.setAttribute("checked", "true");
        }
    }
}

// Toggle Sidenav
function toggleSidenav() {
    const body = document.body;
    const sidenav = document.getElementById("sidenav-main");
    const className = "g-sidenav-pinned";

    if (body.classList.contains(className)) {
        body.classList.remove(className);
        setTimeout(() => sidenav.classList.remove("bg-white"), 100);
        sidenav.classList.remove("bg-transparent");
    } else {
        body.classList.add(className);
        sidenav.classList.add("bg-white");
        sidenav.classList.remove("bg-transparent");
        document.getElementById("iconSidenav").classList.remove("d-none");
    }
}

// Update moving tab on nav pills
function updateMovingTab() {
    const navPills = document.querySelectorAll(".nav-pills");

    navPills.forEach(navPill => {
        const movingTab = document.createElement("div");
        movingTab.classList.add("moving-tab", "position-absolute", "nav-link");
        movingTab.appendChild(navPill.querySelector("li:first-child .nav-link").cloneNode(true));
        navPill.appendChild(movingTab);

        const tabs = navPill.querySelectorAll("li");
        tabs.forEach(tab => {
            tab.addEventListener("click", () => {
                const tabWidth = tab.offsetWidth;
                const tabOffset = tab.offsetLeft;
                const movingTabWidth = movingTab.offsetWidth;

                movingTab.style.transform = `translate3d(${tabOffset}px, 0px, 0px)`;
                movingTab.style.transition = "transform 0.5s ease";
            });
        });
    });
}

// Toggle Dark Mode
function toggleDarkMode() {
    const darkModeSwitch = document.querySelector(".dark-mode-switch");
    const body = document.body;
    const icon = darkModeSwitch.querySelector("i");

    darkModeSwitch.addEventListener("click", () => {
        if (body.classList.contains("dark-mode")) {
            body.classList.remove("dark-mode");
            icon.classList.remove("fa-sun");
            icon.classList.add("fa-moon");
        } else {
            body.classList.add("dark-mode");
            icon.classList.remove("fa-moon");
            icon.classList.add("fa-sun");
        }
    });
}

// Initialize all features
function initializeFeatures() {
    initializePerfectScrollbar();
    setupNavbarBlur();
    handleInputFocus();
    setupFixedPlugin();
    initializeTooltips();
    updateMovingTab();
    toggleDarkMode();
}

// Run the initialization function on page load
document.addEventListener("DOMContentLoaded", initializeFeatures);
